@model TrnReceivingReceipt

<form id="frmDownloadPO" asp-antiforgery="false" method="post">
    <div class="row" style="padding-top: 10px">
        <div class="col-md-6">
            <div class="form-group row">
                <label class="col-md-4" style="padding-top: 5px; font-weight: bold;">Supplier</label>
                <div class="col-sm-8">
                    <kendo-textbox name="SupplierName" placeholder="Supplier" readonly="true" value="@Model.SupplierName" style="width: 100%; background-color: lightgray;">
                    </kendo-textbox>
                </div>
            </div>

            <div class="form-group row">
                <label class="col-md-4" style="padding-top: 5px; font-weight: bold;">PO Number</label>
                <div class="col-md-8">
                    <kendo-combobox name="SelectPoid" style="width: 60%"
                                    datatextfield="Ponumber"
                                    datavaluefield="Id"
                                    min-length="3"
                                    height="520"
                                    value="@Model.SelectPOId"
                                    filter="FilterType.Contains"
                                    template="<span style='width: 200px;'>#: data.Ponumber#</span><span>#:  kendo.format('{0:MM/dd/yyyy}', kendo.parseDate(data.Podate))#</span>"
                                    on-change="EntityComboxChange">
                        <datasource type="DataSourceTagHelperType.Ajax" page-size="70" auto-sync="true">
                            <transport>
                                <read url="@Url.Action("LinePOs", "TrnReceivingReceipt")" data="FilterLinePOs" />
                            </transport>
                        </datasource>
                    </kendo-combobox>
                </div>
            </div>
        </div>
    </div>
</form>

<form id="frmDownloadPOLine">
    @(Html.Kendo().Grid<webfmis.DTO.TmpPurchaseOrderStatusItem>()
            .Name("detailSF1")
            .Columns(columns =>
            {
                columns.Bound(x => x.ItemCode)
                    .Title("Item No.")
                    .Filterable(false)
                    .Width(150);
                columns.Bound(x => x.ItemName)
                    .Title("Item")
                    .Filterable(false)
                    .Width(300);
                columns.Bound(x => x.UnitName)
                    .Title("Unit")
                    .Filterable(false)
                    .Width(150);
                columns.Bound(x => x.POQuantity)
                    .Title("PO Qty")
                    .Filterable(false)
                    .Width(125)
                    .HtmlAttributes(new { @style = "text-align: end"});
                columns.Bound(x => x.RRQuantity)
                    .Title("RR Qty")
                    .Filterable(false)
                    .Width(125)
                    .HtmlAttributes(new { @style = "text-align: end" });
                columns.Bound(x => x.BalanceQuantity)
                    .Title("Balance")
                    .Filterable(false)
                    .Width(125)
                    .HtmlAttributes(new { @style = "text-align: end"});
                columns.Bound(x => x.Pick).Title("P")
                    .ClientTemplate("<input type='checkbox' #= Pick ? checked='checked' : '' # />")
                    .Filterable(false)
                    .Width(50)
                    .HtmlAttributes(new { @onchange = "PickItem()"});
                columns.Bound(x => x.Quantity)
                    .Title("Quantity")
                    .Filterable(false)
                    .Width(125)
                    .HtmlAttributes(new { @style = "text-align: end;" });
                columns.Bound(x => x.POId).Hidden();
                columns.Bound(x => x.ItemId).Hidden();
                columns.Bound(x => x.UnitId).Hidden();
            })
            .Selectable(x => x.Mode(GridSelectionMode.Single))
            .Pageable()
            .Editable(editable => editable.Mode(GridEditMode.InCell))
            .Scrollable()
            .Height(400)
            .DataSource(dataSource => dataSource
                .Ajax()
                .Model(model =>
                {
                    model.Id(p => p.ItemId);
                    model.Field(p => p.ItemCode).Editable(false);
                    model.Field(p => p.ItemName).Editable(false);
                    model.Field(p => p.UnitName).Editable(false);
                    model.Field(p => p.POQuantity).Editable(false);
                    model.Field(p => p.RRQuantity).Editable(false);
                    model.Field(p => p.Cost).Editable(false);
                    model.Field(p => p.BalanceQuantity).Editable(false);
                    model.Field(p => p.Pick);
                    model.Field(p => p.Quantity);
                })
                .ServerOperation(true)
                .PageSize(5)
                .Read(read => read.Action("POStatusLines", "TrnReceivingReceipt"))
        ))
</form>